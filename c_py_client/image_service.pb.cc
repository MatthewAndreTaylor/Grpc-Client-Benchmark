// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: image_service.proto
// Protobuf C++ Version: 5.28.1

#include "image_service.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace image_service {

inline constexpr StreamImagesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : image_names_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StreamImagesRequest::StreamImagesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StreamImagesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamImagesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamImagesRequestDefaultTypeInternal() {}
  union {
    StreamImagesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamImagesRequestDefaultTypeInternal _StreamImagesRequest_default_instance_;

inline constexpr ListImagesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : image_names_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListImagesResponse::ListImagesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListImagesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListImagesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListImagesResponseDefaultTypeInternal() {}
  union {
    ListImagesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListImagesResponseDefaultTypeInternal _ListImagesResponse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ListImagesRequest::ListImagesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ListImagesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListImagesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListImagesRequestDefaultTypeInternal() {}
  union {
    ListImagesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListImagesRequestDefaultTypeInternal _ListImagesRequest_default_instance_;

inline constexpr Image::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        format_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        size_in_bytes_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Image::Image(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ImageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImageDefaultTypeInternal() {}
  union {
    Image _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImageDefaultTypeInternal _Image_default_instance_;

inline constexpr StreamImagesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        image_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StreamImagesResponse::StreamImagesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StreamImagesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamImagesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamImagesResponseDefaultTypeInternal() {}
  union {
    StreamImagesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamImagesResponseDefaultTypeInternal _StreamImagesResponse_default_instance_;
}  // namespace image_service
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_image_5fservice_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_image_5fservice_2eproto = nullptr;
const ::uint32_t
    TableStruct_image_5fservice_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::image_service::Image, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::image_service::Image, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::image_service::Image, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::image_service::Image, _impl_.format_),
        PROTOBUF_FIELD_OFFSET(::image_service::Image, _impl_.size_in_bytes_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::image_service::ListImagesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::image_service::ListImagesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::image_service::ListImagesResponse, _impl_.image_names_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::image_service::StreamImagesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::image_service::StreamImagesRequest, _impl_.image_names_),
        PROTOBUF_FIELD_OFFSET(::image_service::StreamImagesResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::image_service::StreamImagesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::image_service::StreamImagesResponse, _impl_.image_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::image_service::Image)},
        {12, -1, -1, sizeof(::image_service::ListImagesRequest)},
        {20, -1, -1, sizeof(::image_service::ListImagesResponse)},
        {29, -1, -1, sizeof(::image_service::StreamImagesRequest)},
        {38, 47, -1, sizeof(::image_service::StreamImagesResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::image_service::_Image_default_instance_._instance,
    &::image_service::_ListImagesRequest_default_instance_._instance,
    &::image_service::_ListImagesResponse_default_instance_._instance,
    &::image_service::_StreamImagesRequest_default_instance_._instance,
    &::image_service::_StreamImagesResponse_default_instance_._instance,
};
const char descriptor_table_protodef_image_5fservice_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\023image_service.proto\022\rimage_service\"M\n\005"
    "Image\022\014\n\004name\030\001 \001(\t\022\017\n\007content\030\002 \001(\014\022\016\n\006"
    "format\030\003 \001(\t\022\025\n\rsize_in_bytes\030\004 \001(\005\"\023\n\021L"
    "istImagesRequest\")\n\022ListImagesResponse\022\023"
    "\n\013image_names\030\001 \003(\t\"*\n\023StreamImagesReque"
    "st\022\023\n\013image_names\030\001 \003(\t\";\n\024StreamImagesR"
    "esponse\022#\n\005image\030\001 \001(\0132\024.image_service.I"
    "mage2\274\001\n\014ImageService\022Q\n\nListImages\022 .im"
    "age_service.ListImagesRequest\032!.image_se"
    "rvice.ListImagesResponse\022Y\n\014StreamImages"
    "\022\".image_service.StreamImagesRequest\032#.i"
    "mage_service.StreamImagesResponse0\001b\006pro"
    "to3"
};
static ::absl::once_flag descriptor_table_image_5fservice_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_image_5fservice_2eproto = {
    false,
    false,
    483,
    descriptor_table_protodef_image_5fservice_2eproto,
    "image_service.proto",
    &descriptor_table_image_5fservice_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_image_5fservice_2eproto::offsets,
    file_level_enum_descriptors_image_5fservice_2eproto,
    file_level_service_descriptors_image_5fservice_2eproto,
};
namespace image_service {
// ===================================================================

class Image::_Internal {
 public:
};

Image::Image(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:image_service.Image)
}
inline PROTOBUF_NDEBUG_INLINE Image::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::image_service::Image& from_msg)
      : name_(arena, from.name_),
        content_(arena, from.content_),
        format_(arena, from.format_),
        _cached_size_{0} {}

Image::Image(
    ::google::protobuf::Arena* arena,
    const Image& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Image* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.size_in_bytes_ = from._impl_.size_in_bytes_;

  // @@protoc_insertion_point(copy_constructor:image_service.Image)
}
inline PROTOBUF_NDEBUG_INLINE Image::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        content_(arena),
        format_(arena),
        _cached_size_{0} {}

inline void Image::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.size_in_bytes_ = {};
}
Image::~Image() {
  // @@protoc_insertion_point(destructor:image_service.Image)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Image::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.content_.Destroy();
  _impl_.format_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Image::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Image_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Image::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Image>(),
            ::google::protobuf::Message::GetNewImpl<Image>(),
            ::google::protobuf::Message::GetClearImpl<Image>(), &Image::ByteSizeLong,
                &Image::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Image, _impl_._cached_size_),
            false,
        },
        &Image::kDescriptorMethods,
        &descriptor_table_image_5fservice_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Image::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 38, 2> Image::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::image_service::Image>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 size_in_bytes = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Image, _impl_.size_in_bytes_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Image, _impl_.size_in_bytes_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Image, _impl_.name_)}},
    // bytes content = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Image, _impl_.content_)}},
    // string format = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Image, _impl_.format_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Image, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes content = 2;
    {PROTOBUF_FIELD_OFFSET(Image, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // string format = 3;
    {PROTOBUF_FIELD_OFFSET(Image, _impl_.format_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 size_in_bytes = 4;
    {PROTOBUF_FIELD_OFFSET(Image, _impl_.size_in_bytes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\23\4\0\6\0\0\0\0"
    "image_service.Image"
    "name"
    "format"
  }},
};

PROTOBUF_NOINLINE void Image::Clear() {
// @@protoc_insertion_point(message_clear_start:image_service.Image)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _impl_.format_.ClearToEmpty();
  _impl_.size_in_bytes_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Image::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Image& this_ = static_cast<const Image&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Image::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Image& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:image_service.Image)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "image_service.Image.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bytes content = 2;
          if (!this_._internal_content().empty()) {
            const std::string& _s = this_._internal_content();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // string format = 3;
          if (!this_._internal_format().empty()) {
            const std::string& _s = this_._internal_format();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "image_service.Image.format");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // int32 size_in_bytes = 4;
          if (this_._internal_size_in_bytes() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_size_in_bytes(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:image_service.Image)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Image::ByteSizeLong(const MessageLite& base) {
          const Image& this_ = static_cast<const Image&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Image::ByteSizeLong() const {
          const Image& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:image_service.Image)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // bytes content = 2;
            if (!this_._internal_content().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_content());
            }
            // string format = 3;
            if (!this_._internal_format().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_format());
            }
            // int32 size_in_bytes = 4;
            if (this_._internal_size_in_bytes() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_size_in_bytes());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Image::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Image*>(&to_msg);
  auto& from = static_cast<const Image&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:image_service.Image)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (!from._internal_format().empty()) {
    _this->_internal_set_format(from._internal_format());
  }
  if (from._internal_size_in_bytes() != 0) {
    _this->_impl_.size_in_bytes_ = from._impl_.size_in_bytes_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Image::CopyFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:image_service.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Image::InternalSwap(Image* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.format_, &other->_impl_.format_, arena);
        swap(_impl_.size_in_bytes_, other->_impl_.size_in_bytes_);
}

::google::protobuf::Metadata Image::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListImagesRequest::_Internal {
 public:
};

ListImagesRequest::ListImagesRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:image_service.ListImagesRequest)
}
ListImagesRequest::ListImagesRequest(
    ::google::protobuf::Arena* arena,
    const ListImagesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListImagesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:image_service.ListImagesRequest)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ListImagesRequest::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_ListImagesRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ListImagesRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<ListImagesRequest>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<ListImagesRequest>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<ListImagesRequest>(), &ListImagesRequest::ByteSizeLong,
                &ListImagesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ListImagesRequest, _impl_._cached_size_),
            false,
        },
        &ListImagesRequest::kDescriptorMethods,
        &descriptor_table_image_5fservice_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ListImagesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> ListImagesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::image_service::ListImagesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata ListImagesRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListImagesResponse::_Internal {
 public:
};

ListImagesResponse::ListImagesResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:image_service.ListImagesResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListImagesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::image_service::ListImagesResponse& from_msg)
      : image_names_{visibility, arena, from.image_names_},
        _cached_size_{0} {}

ListImagesResponse::ListImagesResponse(
    ::google::protobuf::Arena* arena,
    const ListImagesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListImagesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:image_service.ListImagesResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListImagesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : image_names_{visibility, arena},
        _cached_size_{0} {}

inline void ListImagesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ListImagesResponse::~ListImagesResponse() {
  // @@protoc_insertion_point(destructor:image_service.ListImagesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListImagesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ListImagesResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_ListImagesResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ListImagesResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<ListImagesResponse>(),
            ::google::protobuf::Message::GetNewImpl<ListImagesResponse>(),
            ::google::protobuf::Message::GetClearImpl<ListImagesResponse>(), &ListImagesResponse::ByteSizeLong,
                &ListImagesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ListImagesResponse, _impl_._cached_size_),
            false,
        },
        &ListImagesResponse::kDescriptorMethods,
        &descriptor_table_image_5fservice_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ListImagesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 52, 2> ListImagesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::image_service::ListImagesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string image_names = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListImagesResponse, _impl_.image_names_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string image_names = 1;
    {PROTOBUF_FIELD_OFFSET(ListImagesResponse, _impl_.image_names_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\40\13\0\0\0\0\0\0"
    "image_service.ListImagesResponse"
    "image_names"
  }},
};

PROTOBUF_NOINLINE void ListImagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:image_service.ListImagesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.image_names_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ListImagesResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ListImagesResponse& this_ = static_cast<const ListImagesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ListImagesResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ListImagesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:image_service.ListImagesResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string image_names = 1;
          for (int i = 0, n = this_._internal_image_names_size(); i < n; ++i) {
            const auto& s = this_._internal_image_names().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "image_service.ListImagesResponse.image_names");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:image_service.ListImagesResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ListImagesResponse::ByteSizeLong(const MessageLite& base) {
          const ListImagesResponse& this_ = static_cast<const ListImagesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ListImagesResponse::ByteSizeLong() const {
          const ListImagesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:image_service.ListImagesResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string image_names = 1;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_image_names().size());
              for (int i = 0, n = this_._internal_image_names().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_image_names().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ListImagesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListImagesResponse*>(&to_msg);
  auto& from = static_cast<const ListImagesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:image_service.ListImagesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_image_names()->MergeFrom(from._internal_image_names());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListImagesResponse::CopyFrom(const ListImagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:image_service.ListImagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListImagesResponse::InternalSwap(ListImagesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.image_names_.InternalSwap(&other->_impl_.image_names_);
}

::google::protobuf::Metadata ListImagesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StreamImagesRequest::_Internal {
 public:
};

StreamImagesRequest::StreamImagesRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:image_service.StreamImagesRequest)
}
inline PROTOBUF_NDEBUG_INLINE StreamImagesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::image_service::StreamImagesRequest& from_msg)
      : image_names_{visibility, arena, from.image_names_},
        _cached_size_{0} {}

StreamImagesRequest::StreamImagesRequest(
    ::google::protobuf::Arena* arena,
    const StreamImagesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StreamImagesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:image_service.StreamImagesRequest)
}
inline PROTOBUF_NDEBUG_INLINE StreamImagesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : image_names_{visibility, arena},
        _cached_size_{0} {}

inline void StreamImagesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StreamImagesRequest::~StreamImagesRequest() {
  // @@protoc_insertion_point(destructor:image_service.StreamImagesRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StreamImagesRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    StreamImagesRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_StreamImagesRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &StreamImagesRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<StreamImagesRequest>(),
            ::google::protobuf::Message::GetNewImpl<StreamImagesRequest>(),
            ::google::protobuf::Message::GetClearImpl<StreamImagesRequest>(), &StreamImagesRequest::ByteSizeLong,
                &StreamImagesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(StreamImagesRequest, _impl_._cached_size_),
            false,
        },
        &StreamImagesRequest::kDescriptorMethods,
        &descriptor_table_image_5fservice_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* StreamImagesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 53, 2> StreamImagesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::image_service::StreamImagesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string image_names = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StreamImagesRequest, _impl_.image_names_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string image_names = 1;
    {PROTOBUF_FIELD_OFFSET(StreamImagesRequest, _impl_.image_names_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\41\13\0\0\0\0\0\0"
    "image_service.StreamImagesRequest"
    "image_names"
  }},
};

PROTOBUF_NOINLINE void StreamImagesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:image_service.StreamImagesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.image_names_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StreamImagesRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StreamImagesRequest& this_ = static_cast<const StreamImagesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StreamImagesRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StreamImagesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:image_service.StreamImagesRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string image_names = 1;
          for (int i = 0, n = this_._internal_image_names_size(); i < n; ++i) {
            const auto& s = this_._internal_image_names().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "image_service.StreamImagesRequest.image_names");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:image_service.StreamImagesRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StreamImagesRequest::ByteSizeLong(const MessageLite& base) {
          const StreamImagesRequest& this_ = static_cast<const StreamImagesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StreamImagesRequest::ByteSizeLong() const {
          const StreamImagesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:image_service.StreamImagesRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string image_names = 1;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_image_names().size());
              for (int i = 0, n = this_._internal_image_names().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_image_names().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StreamImagesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StreamImagesRequest*>(&to_msg);
  auto& from = static_cast<const StreamImagesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:image_service.StreamImagesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_image_names()->MergeFrom(from._internal_image_names());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StreamImagesRequest::CopyFrom(const StreamImagesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:image_service.StreamImagesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StreamImagesRequest::InternalSwap(StreamImagesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.image_names_.InternalSwap(&other->_impl_.image_names_);
}

::google::protobuf::Metadata StreamImagesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StreamImagesResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StreamImagesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StreamImagesResponse, _impl_._has_bits_);
};

StreamImagesResponse::StreamImagesResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:image_service.StreamImagesResponse)
}
inline PROTOBUF_NDEBUG_INLINE StreamImagesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::image_service::StreamImagesResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StreamImagesResponse::StreamImagesResponse(
    ::google::protobuf::Arena* arena,
    const StreamImagesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StreamImagesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.image_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::image_service::Image>(
                              arena, *from._impl_.image_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:image_service.StreamImagesResponse)
}
inline PROTOBUF_NDEBUG_INLINE StreamImagesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StreamImagesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.image_ = {};
}
StreamImagesResponse::~StreamImagesResponse() {
  // @@protoc_insertion_point(destructor:image_service.StreamImagesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StreamImagesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.image_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    StreamImagesResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_StreamImagesResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &StreamImagesResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<StreamImagesResponse>(),
            ::google::protobuf::Message::GetNewImpl<StreamImagesResponse>(),
            ::google::protobuf::Message::GetClearImpl<StreamImagesResponse>(), &StreamImagesResponse::ByteSizeLong,
                &StreamImagesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(StreamImagesResponse, _impl_._cached_size_),
            false,
        },
        &StreamImagesResponse::kDescriptorMethods,
        &descriptor_table_image_5fservice_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* StreamImagesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StreamImagesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StreamImagesResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::image_service::StreamImagesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .image_service.Image image = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StreamImagesResponse, _impl_.image_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .image_service.Image image = 1;
    {PROTOBUF_FIELD_OFFSET(StreamImagesResponse, _impl_.image_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::image_service::Image>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StreamImagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:image_service.StreamImagesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.image_ != nullptr);
    _impl_.image_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StreamImagesResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StreamImagesResponse& this_ = static_cast<const StreamImagesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StreamImagesResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StreamImagesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:image_service.StreamImagesResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .image_service.Image image = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.image_, this_._impl_.image_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:image_service.StreamImagesResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StreamImagesResponse::ByteSizeLong(const MessageLite& base) {
          const StreamImagesResponse& this_ = static_cast<const StreamImagesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StreamImagesResponse::ByteSizeLong() const {
          const StreamImagesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:image_service.StreamImagesResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .image_service.Image image = 1;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.image_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StreamImagesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StreamImagesResponse*>(&to_msg);
  auto& from = static_cast<const StreamImagesResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:image_service.StreamImagesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.image_ != nullptr);
    if (_this->_impl_.image_ == nullptr) {
      _this->_impl_.image_ =
          ::google::protobuf::Message::CopyConstruct<::image_service::Image>(arena, *from._impl_.image_);
    } else {
      _this->_impl_.image_->MergeFrom(*from._impl_.image_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StreamImagesResponse::CopyFrom(const StreamImagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:image_service.StreamImagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StreamImagesResponse::InternalSwap(StreamImagesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.image_, other->_impl_.image_);
}

::google::protobuf::Metadata StreamImagesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace image_service
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_image_5fservice_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
